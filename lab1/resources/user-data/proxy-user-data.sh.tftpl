#!/bin/bash
# This script should be run as root
set -e

# Install required package
yum install -y squid wget 389-ds-base nfs-utils sssd wget

##########################################
# Setup Squid proxy
##########################################

# Enable Linux IP forwarding
# echo "net.ipv4.ip_forward = 1" >> /proc/sys/net/ipv4/ip_forward
echo 1 > /proc/sys/net/ipv4/ip_forward
sysctl -p

# Config squid proxy
cat > /etc/squid/squid.conf <<EOF
# Allow all
http_access allow all

# Enable squid on port 3128
http_port 3128

coredump_dir /var/spool/squid

#
# Add any of your own refresh_pattern entries above these.
#
refresh_pattern ^ftp:           1440    20%     10080
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0
refresh_pattern .               0       20%     4320
EOF

# Enable squid proxy
systemctl start squid
systemctl enable squid

##########################################
# Setup Cloudwatch agent
##########################################

# Install CloudWatch Agent
wget https://amazoncloudwatch-agent.s3.amazonaws.com/redhat/amd64/latest/amazon-cloudwatch-agent.rpm
rpm -U ./amazon-cloudwatch-agent.rpm
rm amazon-cloudwatch-agent.rpm

# Setup Cloudwatch agent
cat > /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json <<EOF
{
  "agent": {
    "metrics_collection_interval": 60,
    "run_as_user": "root"
  },
  "logs": {
    "logs_collected": {
      "files": {
        "collect_list": [
          {
            "file_path": "/var/log/squid/access.log",
            "log_group_class": "STANDARD",
            "log_group_name": "SquidProxyLog",
            "log_stream_name": "Access log - {instance_id}",
            "retention_in_days": 3
          }
        ]
      }
    }
  }
}
EOF

# Parse config and enable Cloudwatch Agent
/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json

##########################################
# Join LDAP
##########################################

# Wait for LDAP startup properly
sleep 100

# Populate sssd config
cat > /etc/sssd/sssd.conf <<EOF
[domain/ldap]
debug_level=9

cache_credentials = True
id_provider = ldap
auth_provider = ldap
access_provider = ldap
chpass_provider = ldap
ldap_schema = rfc2307bis
ldap_search_base = dc=example,dc=com
ldap_uri = ldaps://${ ldap_server_dns_endpoint }

ldap_tls_reqcert = never
ldap_tls_cacertdir = /etc/openldap/certs
ldap_tls_cacert = /etc/openldap/certs/ca.crt

ldap_access_filter = (memberOf=cn=server_admins,ou=Groups,dc=example,dc=com)

enumerate = false
access_provider = ldap
ldap_user_member_of = memberof
ldap_user_gecos = cn
ldap_user_uuid = nsUniqueId
ldap_group_uuid = nsUniqueId
ldap_account_expire_policy = rhds
ldap_access_order = filter, expire
# Setup for ssh keys
# Inside /etc/ssh/sshd_config add the lines:
#   AuthorizedKeysCommand /usr/bin/sss_ssh_authorizedkeys
#   AuthorizedKeysCommandUser nobody
# You can test with the command: sss_ssh_authorizedkeys <username>
ldap_user_ssh_public_key = nsSshPublicKey
ignore_group_members = False

[sssd]
services = nss, pam, ssh, sudo
config_file_version = 2

domains = ldap
[nss]
homedir_substring = /home
EOF

chmod 600 /etc/sssd/sssd.conf
chown root:root /etc/sssd/sssd.conf

# Enable password login
echo "PasswordAuthentication yes" > /etc/ssh/sshd_config.d/50-cloud-init.conf

# Setup for ssh key
echo "AuthorizedKeysCommand /usr/bin/sss_ssh_authorizedkeys" >> /etc/ssh/sshd_config
echo "AuthorizedKeysCommandUser nobody" >> /etc/ssh/sshd_config

# Enable create home folder for LDAP user
authconfig --enablemkhomedir --update

# Start sssd & Restart sshd
systemctl start sssd
systemctl enable sssd
systemctl restart sshd
